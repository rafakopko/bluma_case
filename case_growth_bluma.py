import streamlit as st
import pandas as pd
import plotly.express as px
import numpy as np

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Case Analista Growth - Bluma",
    page_icon="üíÖ",
    layout="wide",
    initial_sidebar_state="expanded"
)

# CSS customizado
st.markdown("""
<style>
    .main-header {
        color: #FF1493;
        text-align: center;
        font-size: 3rem;
        font-weight: bold;
        margin-bottom: 2rem;
    }
    
    .metric-card {
        background-color: #FFF0F5;
        padding: 1rem;
        border-radius: 10px;
        border-left: 5px solid #FF1493;
        margin: 0.5rem 0;
    }
    
    .challenge-box {
        background-color: #FF69B4;
        color: white;
        padding: 1.5rem;
        border-radius: 15px;
        text-align: center;
        font-weight: bold;
        font-size: 1.2rem;
        margin: 1rem 0;
    }
    
    .success-box {
        background-color: #90EE90;
        padding: 1rem;
        border-radius: 10px;
        border-left: 5px solid #228B22;
    }
    
    .stTabs [data-baseweb="tab-list"] {
        gap: 2px;
    }
    
    .stTabs [data-baseweb="tab"] {
        height: 50px;
        padding-left: 20px;
        padding-right: 20px;
    }
    
    footer {
        text-align: center;
        color: #666;
        margin-top: 3rem;
        padding: 2rem;
        border-top: 1px solid #eee;
    }
</style>
""", unsafe_allow_html=True)

# Header principal
st.markdown('<h1 class="main-header">üíÖ Case: Analista de Growth - M√≠dia Paga</h1>', unsafe_allow_html=True)

# Sidebar
with st.sidebar:
    st.markdown("### üå∏ BLUMA BEAUTY")
    st.markdown("*Marketplace de Beleza e Bem-estar*")
    
    # Credenciais do banco
    with st.expander("üóÑÔ∏è Credenciais do Banco", expanded=False):
        st.code("""
Host: 95.111.240.159
Port: 3306
Database: bluma_case
Username: candidato
Password: bluma123
        """)
    
    st.markdown("---")
    
    # M√©tricas-alvo
    st.markdown("### üéØ M√©tricas-Alvo")
    st.metric("LTV/CARC Atual", "2.33x", delta="Meta: 3.03x (+30%)")
    st.markdown("**Prazo:** 3 meses")
    
    st.markdown("---")
    
    # Informa√ß√µes adicionais
    st.markdown("### üìä Dados Dispon√≠veis")
    st.markdown("""
    - 50.000 usu√°rios
    - ~150.000 pedidos
    - 120 campanhas
    - Performance di√°ria
    - Eventos de usu√°rio
    - An√°lise de cohorts
    """)

# Conte√∫do principal em tabs
tab1, tab2, tab3, tab4 = st.tabs([
    "üéØ Orienta√ß√µes",
    "üìã Contexto do Neg√≥cio", 
    "üóÑÔ∏è Estrutura de Dados", 
    "üìä Queries de Exemplo"
])

with tab1:
    st.markdown("### üéØ Orienta√ß√µes para o Case")
    
    # Box de destaque com a miss√£o
    st.markdown("""
    <div class="challenge-box">
        üéØ MISS√ÉO PRINCIPAL<br>
        Desenvolver estrat√©gia para aumentar LTV/CARC em 30%<br>
        (de 2.33x para 3.03x) em 3 meses
    </div>
    """, unsafe_allow_html=True)
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("#### üîç Contexto do Desafio")
        st.markdown("""
        - **Prazo:** 3 meses para implementa√ß√£o completa
        - **Meta:** LTV/CARC de 3.03x (aumento de 30%)
        - **Restri√ß√£o:** Budget de m√≠dia paga n√£o pode aumentar mais de 10%
        - **Foco:** Efici√™ncia e otimiza√ß√£o, n√£o crescimento de volume
        """)
    
    with col2:
        st.markdown("#### ‚úÖ O que Esperamos")
        st.markdown("""
        **Profundidade Anal√≠tica:**
        - An√°lise dos dados
        - Insights baseados em evid√™ncias
        
        **Pensamento Estrat√©gico:**
        - Vis√£o hol√≠stica do problema
        - Prioriza√ß√£o por impacto
        - Considera√ß√£o de trade-offs
        
        **Foco em M√©tricas de Neg√≥cio:**
        - Conex√£o clara entre a√ß√µes e resultados
        - KPIs relevantes para o objetivo
        
        **Recomenda√ß√µes Acion√°veis:**
        - Solu√ß√µes pr√°ticas e implement√°veis
        - Timeline realista
        - Recursos necess√°rios

        """)

with tab2:
    col1, col2 = st.columns([2, 1])
    
    with col1:
        st.markdown("### üè¢ Sobre a Bluma")
        st.markdown("""
        A **Bluma** √© um marketplace de beleza e bem-estar que conecta profissionais 
        qualificados com clientes em busca de servi√ßos de qualidade. Atuamos nas 
        principais cidades do Brasil, oferecendo uma plataforma completa para 
        agendamentos de servi√ßos como manicure, massagem, limpeza de pele e muito mais.
        """)
        
        st.markdown("### üö® Situa√ß√£o Atual e Desafios")
        st.markdown("""
        **Contexto:** Nos √∫ltimos 3 meses, observamos uma deteriora√ß√£o nas m√©tricas 
        principais de aquisi√ß√£o e reten√ß√£o:
        
        - üìà **CAC aumentou 35%** (de R$ 67 para R$ 90)
        - üìâ **Taxa de ativa√ß√£o caiu** de 12% para 8% (-4pp)
        - ‚öñÔ∏è **LTV/CARC atual:** 2.33x (abaixo da meta hist√≥rica de 3.0x)
        - üéØ **Meta:** Aumentar LTV/CARC para 3.03x (+30%) em 3 meses
        - üí∞ **Restri√ß√£o:** Budget de m√≠dia n√£o pode aumentar mais de 10%
        """)
        
        # Gr√°ficos
        st.markdown("### üìä Vis√£o Geral do Neg√≥cio")
        
        # Criar 3 colunas para os gr√°ficos
        graph_col1, graph_col2, graph_col3 = st.columns(3)
        
        with graph_col1:
            # Gr√°fico de pizza - Canais de aquisi√ß√£o
            channels_data = {
                'Canal': ['Meta Ads', 'Google Ads', 'TikTok Ads', 'Organic', 'Referral'],
                'Participa√ß√£o': [45, 25, 10, 15, 5]
            }
            fig_channels = px.pie(
                values=channels_data['Participa√ß√£o'], 
                names=channels_data['Canal'],
                title="Distribui√ß√£o de Canais",
                color_discrete_sequence=px.colors.sequential.RdPu_r
            )
            fig_channels.update_layout(height=300, margin=dict(t=40, b=20, l=20, r=20))
            st.plotly_chart(fig_channels, use_container_width=True)
        
        with graph_col2:
            # Gr√°fico de barras - Servi√ßos
            services_data = {
                'Servi√ßo': ['Manicure', 'Massagem', 'Limpeza Pele', 'Sobrancelhas', 'Depila√ß√£o'],
                'Ticket M√©dio': [65, 120, 95, 55, 80],
                'Share': [35, 20, 15, 15, 15]
            }
            fig_services = px.bar(
                x=services_data['Servi√ßo'], 
                y=services_data['Ticket M√©dio'],
                title="Ticket M√©dio por Servi√ßo",
                color=services_data['Share'],
                color_continuous_scale='RdPu'
            )
            fig_services.update_layout(height=300, margin=dict(t=40, b=20, l=20, r=20))
            fig_services.update_xaxes(tickangle=45)
            st.plotly_chart(fig_services, use_container_width=True)
        
        with graph_col3:
            # Treemap - Cidades
            cities_data = {
                'Cidade': ['S√£o Paulo', 'Rio de Janeiro', 'Belo Horizonte', 'Bras√≠lia', 
                          'Curitiba', 'Porto Alegre', 'Salvador', 'Outras'],
                'Participa√ß√£o': [30, 20, 10, 8, 7, 5, 5, 15]
            }
            fig_cities = px.treemap(
                names=cities_data['Cidade'],
                values=cities_data['Participa√ß√£o'],
                title="Distribui√ß√£o por Cidades",
                color=cities_data['Participa√ß√£o'],
                color_continuous_scale='RdPu'
            )
            fig_cities.update_layout(height=300, margin=dict(t=40, b=20, l=20, r=20))
            st.plotly_chart(fig_cities, use_container_width=True)
    
    with col2:
        st.markdown("### üìà KPIs Atuais")
        
        # Cards de m√©tricas
        st.markdown('<div class="metric-card">', unsafe_allow_html=True)
        st.metric("LTV/CARC", "2.33x", delta="-0.67x (-23%)", delta_color="inverse")
        st.markdown('</div>', unsafe_allow_html=True)
        
        st.markdown('<div class="metric-card">', unsafe_allow_html=True)
        st.metric("CAC M√©dio", "R$ 90", delta="+R$ 23 (+35%)", delta_color="inverse")
        st.markdown('</div>', unsafe_allow_html=True)
        
        st.markdown('<div class="metric-card">', unsafe_allow_html=True)
        st.metric("Taxa de Ativa√ß√£o", "8%", delta="-4pp", delta_color="inverse")
        st.markdown('</div>', unsafe_allow_html=True)
        
        st.markdown('<div class="metric-card">', unsafe_allow_html=True)
        st.metric("AOV", "R$ 95", delta="+R$ 5 (+5%)", delta_color="normal")
        st.markdown('</div>', unsafe_allow_html=True)
        
        st.markdown('<div class="metric-card">', unsafe_allow_html=True)
        st.metric("Reten√ß√£o M1", "22%", delta="-3pp", delta_color="inverse")
        st.markdown('</div>', unsafe_allow_html=True)

with tab3:
    st.markdown("### üóÑÔ∏è Estrutura do Banco de Dados")
        
    # Se√ß√£o de conex√£o simplificada
    st.markdown("#### ÔøΩ Como Conectar ao Banco")
    
    st.markdown("**üìã Informa√ß√µes de Conex√£o:**")
    
    conn_info_col1, conn_info_col2 = st.columns([1, 1])
    
    with conn_info_col1:
        st.info("""
        **üè† Servidor:** 95.111.240.159  
        **üóÑÔ∏è Banco:** bluma_case  
        **üë§ Usu√°rio:** candidato  
        **üîë Senha:** bluma123  
        **üö™ Porta:** 3306
        """)
    
    with conn_info_col2:
        st.markdown("**ÔøΩ Como usar os dados:**")
        st.markdown("""
        1. **Conecte no banco** usando as credenciais da sidebar
        2. **Explore as tabelas** com SELECT simples
        3. **Analise os relacionamentos** entre usu√°rios e pedidos
        4. **Calcule m√©tricas** como CAC e LTV
        """)
    
    st.markdown("---")
    
    # Fluxo visual dos dados
    st.markdown("#### ÔøΩ Como os Dados se Relacionam")
    
    flow_col1, flow_col2, flow_col3 = st.columns(3)
    
    with flow_col1:
        st.markdown("""
        <div style="background: linear-gradient(135deg, #FF69B4, #FF1493); color: white; padding: 1.5rem; border-radius: 15px; text-align: center; margin: 1rem 0;">
            <h3>üì¢ 1. CAMPANHAS</h3>
            <p><strong>paid_media_campaigns</strong></p>
            <p>120 campanhas ativas<br>Meta, Google, TikTok</p>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("**O que cont√©m:**")
        st.markdown("""
        - Nome das campanhas
        - Plataforma (Meta/Google/TikTok)  
        - Budget di√°rio
        - Per√≠odo de atividade
        - Tipo de campanha
        """)
    
    with flow_col2:
        st.markdown("""
        <div style="background: linear-gradient(135deg, #FFB6C1, #FF69B4); color: white; padding: 1.5rem; border-radius: 15px; text-align: center; margin: 1rem 0;">
            <h3>üë• 2. USU√ÅRIOS</h3>
            <p><strong>users</strong></p>
            <p>50.000 usu√°rios<br>4.955 ativados (9.9%)</p>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("**O que cont√©m:**")
        st.markdown("""
        - Canal de aquisi√ß√£o
        - Data de cadastro
        - Primeira compra
        - Cidade e idade
        - Demografia
        """)
    
    with flow_col3:
        st.markdown("""
        <div style="background: linear-gradient(135deg, #FFF0F5, #FFB6C1); color: #333; padding: 1.5rem; border-radius: 15px; text-align: center; margin: 1rem 0;">
            <h3>üõí 3. PEDIDOS</h3>
            <p><strong>orders</strong></p>
            <p>19.683 pedidos<br>R$ 1.4M em GMV</p>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("**O que cont√©m:**")
        st.markdown("""
        - Valor do pedido
        - Tipo de servi√ßo
        - Data da compra
        - Status (completo/cancelado)
        - M√©todo de pagamento
        """)
    
    # Setas conectoras
    st.markdown("""
    <div style="text-align: center; margin: 1rem 0;">
        <span style="font-size: 2rem;">üì¢ ‚Üí üë• ‚Üí üõí</span><br>
        <strong>Campanhas atraem Usu√°rios que fazem Pedidos</strong>
    </div>
    """, unsafe_allow_html=True)
    
    st.markdown("---")
    
    # Performance tracking
    st.markdown("#### ÔøΩ Acompanhamento de Performance")
    
    perf_col1, perf_col2 = st.columns(2)
    
    with perf_col1:
        st.markdown("""
        <div style="background-color: #FFF0F5; padding: 1.5rem; border-radius: 10px; border-left: 5px solid #FF1493;">
            <h4>üìà Performance Di√°ria</h4>
            <p><strong>daily_performance</strong> - 5.837 registros</p>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("**üìä M√©tricas por dia:**")
        st.markdown("""
        - **Spend:** Quanto gastamos
        - **Impress√µes:** Quantas pessoas viram os an√∫ncios  
        - **Clicks:** Quantas pessoas clicaram
        - **Convers√µes:** Quantas pessoas compraram
        - **New Users:** Novos usu√°rios adquiridos
        """)
        
        st.markdown("**üí° Para que serve:**")
        st.markdown("""
        - Calcular **CAC** (custo por usu√°rio)
        - Ver **tend√™ncias** ao longo do tempo
        - Identificar **campanhas** com melhor performance
        """)
    
    with perf_col2:
        st.markdown("""
        <div style="background-color: #FFF0F5; padding: 1.5rem; border-radius: 10px; border-left: 5px solid #FF1493;">
            <h4>üé® Criativos</h4>
            <p><strong>ad_creatives</strong> - 755 criativos</p>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("**üé≠ Tipos de criativo:**")
        st.markdown("""
        - **UGC:** Conte√∫do de usu√°rios
        - **Carousel:** V√°rias imagens
        - **Video:** V√≠deos promocionais
        - **Static:** Imagem √∫nica
        - **ASMR:** Conte√∫do relaxante
        """)
        
        st.markdown("**üí° Para que serve:**")
        st.markdown("""
        - Ver quais **formatos** funcionam melhor
        - Identificar **fadiga criativa**
        - Otimizar **mix de criativos**
        """)
    
    st.markdown("---")
    
    # Tabelas auxiliares
    st.markdown("#### üìã Tabelas Auxiliares")
    
    aux_col1, aux_col2 = st.columns(2)
    
    with aux_col1:
        with st.expander("üì± user_events - Eventos de Intera√ß√£o"):
            st.markdown("""
            **O que √©:** Registro de a√ß√µes dos usu√°rios no app/site
            
            **Principais eventos:**
            - app_open (abrir app)
            - view_service (ver servi√ßo)
            - add_to_cart (adicionar ao carrinho)
            - search (buscar)
            
            **Para que serve:**
            - Analisar funil de convers√£o
            - Identificar pontos de abandono
            - Otimizar experi√™ncia do usu√°rio
            
            **üí° Dica:** √ötil para entender comportamento antes da compra
            """)
        
        with st.expander("ÔøΩ budget_allocation - Planejamento"):
            st.markdown("""
            **O que √©:** Budget planejado vs real por m√™s e canal
            
            **Informa√ß√µes:**
            - Budget planejado mensal
            - Gasto real
            - CAC objetivo vs real
            
            **Para que serve:**
            - Controle or√ßament√°rio
            - Identificar desvios
            - Planejar pr√≥ximos meses
            
            **üí° Dica:** Compare planned vs actual para ver efici√™ncia
            """)
    
    with aux_col2:
        with st.expander("üë• user_cohorts - An√°lise de Reten√ß√£o"):
            st.markdown("""
            **O que √©:** Receita dos usu√°rios agrupados por m√™s de aquisi√ß√£o
            
            **Dados por usu√°rio:**
            - M0: Receita no m√™s da aquisi√ß√£o
            - M1: Receita no m√™s seguinte  
            - M2: Receita no 2¬∫ m√™s
            - M3: Receita no 3¬∫ m√™s
            
            **Para que serve:**
            - Calcular LTV por per√≠odo
            - Analisar reten√ß√£o
            - Projetar receita futura
            
            **üí° Dica:** Dados j√° calculados, pronto para usar!
            """)
        
        with st.expander("ÔøΩ creative_performance - Performance de Criativos"):
            st.markdown("""
            **O que √©:** Performance detalhada de cada criativo
            
            **M√©tricas por criativo:**
            - Impress√µes e clicks
            - Spend alocado
            - Convers√µes atribu√≠das
            - Taxa de engajamento
            
            **Para que serve:**
            - Identificar melhores criativos
            - Analisar fadiga criativa
            - Otimizar budget entre criativos
            
            **üí° Dica:** Compare performance por tipo de criativo
            """)
    
        
    st.markdown("---")
    
    # Call to action final
    st.markdown("""
    <div style="background: linear-gradient(135deg, #FF69B4, #FF1493); color: white; padding: 2rem; border-radius: 15px; text-align: center; margin: 2rem 0;">
        <h3>üéØ Objetivo do Case</h3>
        <p style="font-size: 1.2rem; margin: 1rem 0;">
            <strong>Aumentar LTV/CAC de 2.33x para 3.03x (+30%) em 3 meses</strong>
        </p>
        <p>Use estes dados para identificar oportunidades e propor estrat√©gias de otimiza√ß√£o!</p>
        <p style="margin-top: 1rem;">
            üîó <strong>Credenciais na sidebar</strong> | üìä <strong>Queries de exemplo na pr√≥xima aba</strong>
        </p>
    </div>
    """, unsafe_allow_html=True)
with tab4:
    st.markdown("### üìä Queries de Exemplo")
    
    # Sub-tabs para categorias
    subtab1, subtab2, subtab3 = st.tabs(["An√°lises B√°sicas", "CAC e LTV", "An√°lise de Cohorts"])
    
    with subtab1:
        st.markdown("#### Overview Geral")
        st.code("""
-- Vis√£o geral dos usu√°rios e ativa√ß√£o
SELECT 
    acquisition_channel,
    COUNT(*) as total_users,
    COUNT(first_order_date) as activated_users,
    ROUND(COUNT(first_order_date) * 100.0 / COUNT(*), 2) as activation_rate,
    ROUND(AVG(DATEDIFF(first_order_date, created_at)), 1) as avg_days_to_first_order
FROM users 
GROUP BY acquisition_channel
ORDER BY total_users DESC;
        """, language="sql")
        
        st.markdown("#### Performance por Canal")
        st.code("""
-- Performance consolidada por canal de m√≠dia paga
SELECT 
    c.platform,
    COUNT(DISTINCT c.campaign_id) as total_campaigns,
    SUM(dp.spend) as total_spend,
    SUM(dp.impressions) as total_impressions,
    SUM(dp.clicks) as total_clicks,
    SUM(dp.conversions) as total_conversions,
    ROUND(SUM(dp.spend) / SUM(dp.conversions), 2) as cac,
    ROUND(SUM(dp.clicks) * 100.0 / SUM(dp.impressions), 2) as ctr,
    ROUND(SUM(dp.conversions) * 100.0 / SUM(dp.clicks), 2) as cvr
FROM paid_media_campaigns c
JOIN daily_performance dp ON c.campaign_id = dp.campaign_id
GROUP BY c.platform
ORDER BY total_spend DESC;
        """, language="sql")
    
    with subtab2:
        st.markdown("#### CAC por Canal (30 dias)")
        st.code("""
-- CAC por canal nos √∫ltimos 30 dias
SELECT 
    c.platform,
    SUM(dp.spend) as spend_30d,
    SUM(dp.new_users) as new_users_30d,
    ROUND(SUM(dp.spend) / NULLIF(SUM(dp.new_users), 0), 2) as cac_30d
FROM paid_media_campaigns c
JOIN daily_performance dp ON c.campaign_id = dp.campaign_id
WHERE dp.date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
GROUP BY c.platform
ORDER BY cac_30d ASC;
        """, language="sql")
        
        st.markdown("#### LTV por Canal (90 dias)")
        st.code("""
-- LTV dos usu√°rios adquiridos por canal (90 dias)
SELECT 
    u.acquisition_channel,
    COUNT(DISTINCT u.user_id) as users,
    COUNT(o.order_id) as total_orders,
    ROUND(SUM(o.order_value), 2) as total_revenue,
    ROUND(AVG(o.order_value), 2) as avg_order_value,
    ROUND(SUM(o.order_value) / COUNT(DISTINCT u.user_id), 2) as ltv_90d
FROM users u
LEFT JOIN orders o ON u.user_id = o.user_id 
    AND o.status = 'completed'
    AND o.order_date <= DATE_ADD(u.first_order_date, INTERVAL 90 DAY)
WHERE u.first_order_date IS NOT NULL
    AND u.first_order_date >= DATE_SUB(CURDATE(), INTERVAL 120 DAY)
GROUP BY u.acquisition_channel
ORDER BY ltv_90d DESC;
        """, language="sql")
    
    with subtab3:
        st.markdown("#### Reten√ß√£o por Cohort Mensal")
        st.code("""
-- An√°lise de reten√ß√£o por cohort mensal
SELECT 
    cohort_month,
    COUNT(*) as cohort_size,
    ROUND(AVG(m0_revenue), 2) as avg_m0_revenue,
    ROUND(AVG(m1_revenue), 2) as avg_m1_revenue,
    ROUND(AVG(m2_revenue), 2) as avg_m2_revenue,
    ROUND(AVG(m3_revenue), 2) as avg_m3_revenue,
    ROUND(SUM(CASE WHEN m1_revenue > 0 THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 2) as retention_m1,
    ROUND(SUM(CASE WHEN m2_revenue > 0 THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 2) as retention_m2,
    ROUND(SUM(CASE WHEN m3_revenue > 0 THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 2) as retention_m3
FROM user_cohorts
GROUP BY cohort_month
ORDER BY cohort_month DESC
LIMIT 12;
        """, language="sql")

# Footer
st.markdown("---")
st.markdown("""
<footer>
    <p>Case desenvolvido para avaliar habilidades de Growth Analytics | Bluma ¬© 2024</p>
    <p>Em caso de d√∫vidas t√©cnicas, entre em contato com o time de recrutamento</p>
</footer>
""", unsafe_allow_html=True)
